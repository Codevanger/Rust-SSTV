name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  CLI_BIN: cli
  GUI_BIN: gui

jobs:
  build:
    name: Build ${{ matrix.os }} binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    # Базово используем bash, чтобы переменные $CLI_BIN / $GUI_BIN
    # одинаково разворачивались и в Linux, и в Windows раннерах.
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy,rustfmt

      # ---------- CLI ----------
      - name: Build ${{ env.CLI_BIN }}
        run: cargo build --release --bin "$CLI_BIN"

      # ---------- GUI ----------
      - name: Build ${{ env.GUI_BIN }}
        run: cargo build --release --bin "$GUI_BIN"

      # ---------- Artifacts ----------
      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-binaries
          path: |
            target/release/${{ env.CLI_BIN }}${{ runner.os == 'Windows' && '.exe' || '' }}
            target/release/${{ env.GUI_BIN }}${{ runner.os == 'Windows' && '.exe' || '' }}
