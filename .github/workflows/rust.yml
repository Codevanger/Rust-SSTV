name: Rust

on:
  push:
    branches: [ "main" ]
    tags:     [ "v*" ]      # ← триггер на версии
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  CLI_BIN: cli
  GUI_BIN: gui

jobs:
# ──────────────────────────── BUILD ────────────────────────────
  build:
    name: Build ${{ matrix.os }} binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      # Linux-зависимости
      - name: Install ALSA + pkg-config (Linux only)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev pkg-config

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy,rustfmt

      # ─ CLI
      - name: Build ${{ env.CLI_BIN }}
        run: cargo build --release --bin "$CLI_BIN"

      # ─ GUI
      - name: Build ${{ env.GUI_BIN }}
        run: cargo build --release --bin "$GUI_BIN"

      # ─ Upload artifacts
      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-binaries
          path: |
            target/release/${{ env.CLI_BIN }}${{ runner.os == 'Windows' && '.exe' || '' }}
            target/release/${{ env.GUI_BIN }}${{ runner.os == 'Windows' && '.exe' || '' }}

# ─────────────────────────── RELEASE ───────────────────────────
  release:
    if: startsWith(github.ref, 'refs/tags/v')   # запускается только на тег
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist            # всё сложится в dist/*

      # (необязательно) можно упаковать файлы в архивы, если нужно
      # - name: Zip assets
      #   run: |
      #     cd dist
      #     for dir in *-binaries; do
      #       zip -j "${dir}.zip" "$dir"/*
      #     done

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}     # vX.Y.Z
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            dist/**                # прикрепляем всё, что скачали
